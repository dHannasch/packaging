name: Release

# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

on:
  release:
    types: [published]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install nox
        python -m pip install build
      shell: bash
    - name: Build package
      run: python -m build
    # - name nox release
    #  run nox --session release -- ${{ secrets.RELEASE_VERSION }}
    - name: Autobump version
      run: |
        # from refs/tags/v1.2.3 get 1.2.3
        VERSION=$(echo $GITHUB_REF | sed 's#.*/v##')
        # there's probably a regexp that will reliably find __version__ in __about__.py
        PLACEHOLDER='__version__ = "20.10.dev0"'
        VERSION_FILE='packaging/__about__.py'
        # ensure the placeholder is there. If grep doesn't find the placeholder
        # it exits with exit code 1 and github actions aborts the build.
        grep "$PLACEHOLDER" "$VERSION_FILE"
        sed -i "s/$PLACEHOLDER/__version__ = \"${VERSION}\"/g" "$VERSION_FILE"
      shell: bash
    - name: Publish to test.pypi.org
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

